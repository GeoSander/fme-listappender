#! <?xml version="1.0" encoding="UTF-8" ?>
#! <TRANSFORMER
# TRANSFORMER_BEGIN ListAppender,1,Attributes,e286a580-9245-11e7-a637-c42c033923d4,"Linked Always",No,NO_PARALLELISM,,No,17291,YES,No,2or3
# <p>The <em>ListAppender</em> adds new elements to an existing list, starting at a desired key or at the first available one. The user can set the values for the elements, based on constants, parameters or other feature attributes.</p>
# <h3>IMPORTANT</h3>
# <p>A user can specify a regular attribute for the <em>List Attribute</em> input parameter of this transformer, which will result in <em>all features being rejected</em>. The reason why this is possible in the first place, is because the <em>ListAppender</em> also supports nested lists, but FME has no parameter type that only allows selection of the "deepest nested list". Therefore, the only way this can be achieved, is by using a regular attribute input parameter, that will show the list key selection dialog once a list attribute has been selected. Below are a couple of examples that explain how the <em>List Attribute</em> parameter can be used.</p>
# <p><strong>Example 1</strong><br />
# If the user wants to append elements at the end of nested list <em>parent{3}.child{}</em> (i.e. append children to parent nr. 3), the <em>List Attribute</em> input parameter should be set to <em>parent{<strong>3</strong>}.child{<strong>0</strong>}</em>. As a general rule, setting the last key to 0 means "just append the values at the end of whatever is there already". This means that even if <em>parent{3}.child{}</em> contains 6 elements (keys 0 - 5) already, the <em>ListAppender</em> will start appending values at key 6. No elements will <em>ever</em> be overwritten.</p>
# <p><strong>Example 2</strong><br />
# If the user wants to append elements starting at <em>exactly</em> key 8 of list <em>example{}</em> (i.e. add elements <em>example{8}</em>, <em>example{9}</em>, etc.), the <em>List Attribute</em> input parameter should be set to <em>example{<strong>8</strong>}</em>. Note that if this list contains more than 8 elements already (e.g. 10 elements, so keys 0 - 9), the new ones will be appended starting at key 10 and further. No elements will <em>ever</em> be overwritten.</p>
# <p><strong>Example 3</strong><br />
# If the user wants to append elements at the end of list <em>example{}.value</em>, the <em>List Attribute</em> parameter could be set to <em>example{<strong>0</strong>}.value</em>. If the user has specified 3 new items to add and the list already contained 2 elements, the result will be:<br />
# <em>example{0}.value = 'existing item1'</em><br />
# <em>example{1}.value = 'existing item2'</em><br />
# <em>example{2}.value = 'new item1'</em><br />
# <em>example{3}.value = 'new item2'</em><br />
# <em>example{4}.value = 'new item3'</em>  </p>
# <p>Note that if the <em>ListAppender</em> failed to append attributes to the list, the feature will be rejected and a _<em>listappender_error</em> attribute containing the failure reason will be added.</p>
# <h3>Notes</h3>
# <ul>
# <li>This transformer has been tested on Python 2.7 and 3.4.  </li>
# <li>Released under <a href="https://github.com/SanderSchaminee/fme-listappender/blob/master/LICENSE">GNU General Public License v3.0</a>.  </li>
# <li>If you notice a bug or desire a new feature, please contact me. Or make a <a href="https://github.com/SanderSchaminee/fme-listappender">pull request</a>!</li>
# </ul>
# TRANSFORMER_END
#!   FMX_ATTRIBUTE_PROPOGATION_MODE="AUTO"
#!   FME_LINKED_TRANSFORMER_VERSION="1"
#!   SHOW_INFO_NODES="true"
#!   LAST_SAVE_DATE="2017-09-05T16:24:10"
#!   PASSWORD=""
#!   CATEGORY="Attributes"
#!   MAX_LOOP_ITERATIONS=""
#!   PYTHON_COMPATIBILITY="2or3"
#!   DESCRIPTION="&lt;p&gt;The &lt;em&gt;ListAppender&lt;/em&gt; adds new elements to an existing list, starting at a desired key or at the first available one. The user can set the values for the elements, based on constants, parameters or other feature attributes.&lt;/p&gt;&#10;&lt;h3&gt;IMPORTANT&lt;/h3&gt;&#10;&lt;p&gt;A user can specify a regular attribute for the &lt;em&gt;List Attribute&lt;/em&gt; input parameter of this transformer, which will result in &lt;em&gt;all features being rejected&lt;/em&gt;. The reason why this is possible in the first place, is because the &lt;em&gt;ListAppender&lt;/em&gt; also supports nested lists, but FME has no parameter type that only allows selection of the &quot;deepest nested list&quot;. Therefore, the only way this can be achieved, is by using a regular attribute input parameter, that will show the list key selection dialog once a list attribute has been selected. Below are a couple of examples that explain how the &lt;em&gt;List Attribute&lt;/em&gt; parameter can be used.&lt;/p&gt;&#10;&lt;p&gt;&lt;strong&gt;Example 1&lt;/strong&gt;&lt;br /&gt;&#10;If the user wants to append elements at the end of nested list &lt;em&gt;parent{3}.child{}&lt;/em&gt; (i.e. append children to parent nr. 3), the &lt;em&gt;List Attribute&lt;/em&gt; input parameter should be set to &lt;em&gt;parent{&lt;strong&gt;3&lt;/strong&gt;}.child{&lt;strong&gt;0&lt;/strong&gt;}&lt;/em&gt;. As a general rule, setting the last key to 0 means &quot;just append the values at the end of whatever is there already&quot;. This means that even if &lt;em&gt;parent{3}.child{}&lt;/em&gt; contains 6 elements (keys 0 - 5) already, the &lt;em&gt;ListAppender&lt;/em&gt; will start appending values at key 6. No elements will &lt;em&gt;ever&lt;/em&gt; be overwritten.&lt;/p&gt;&#10;&lt;p&gt;&lt;strong&gt;Example 2&lt;/strong&gt;&lt;br /&gt;&#10;If the user wants to append elements starting at &lt;em&gt;exactly&lt;/em&gt; key 8 of list &lt;em&gt;example{}&lt;/em&gt; (i.e. add elements &lt;em&gt;example{8}&lt;/em&gt;, &lt;em&gt;example{9}&lt;/em&gt;, etc.), the &lt;em&gt;List Attribute&lt;/em&gt; input parameter should be set to &lt;em&gt;example{&lt;strong&gt;8&lt;/strong&gt;}&lt;/em&gt;. Note that if this list contains more than 8 elements already (e.g. 10 elements, so keys 0 - 9), the new ones will be appended starting at key 10 and further. No elements will &lt;em&gt;ever&lt;/em&gt; be overwritten.&lt;/p&gt;&#10;&lt;p&gt;&lt;strong&gt;Example 3&lt;/strong&gt;&lt;br /&gt;&#10;If the user wants to append elements at the end of list &lt;em&gt;example{}.value&lt;/em&gt;, the &lt;em&gt;List Attribute&lt;/em&gt; parameter could be set to &lt;em&gt;example{&lt;strong&gt;0&lt;/strong&gt;}.value&lt;/em&gt;. If the user has specified 3 new items to add and the list already contained 2 elements, the result will be:&lt;br /&gt;&#10;&lt;em&gt;example{0}.value = &apos;existing item1&apos;&lt;/em&gt;&lt;br /&gt;&#10;&lt;em&gt;example{1}.value = &apos;existing item2&apos;&lt;/em&gt;&lt;br /&gt;&#10;&lt;em&gt;example{2}.value = &apos;new item1&apos;&lt;/em&gt;&lt;br /&gt;&#10;&lt;em&gt;example{3}.value = &apos;new item2&apos;&lt;/em&gt;&lt;br /&gt;&#10;&lt;em&gt;example{4}.value = &apos;new item3&apos;&lt;/em&gt;  &lt;/p&gt;&#10;&lt;p&gt;Note that if the &lt;em&gt;ListAppender&lt;/em&gt; failed to append attributes to the list, the feature will be rejected and a _&lt;em&gt;listappender_error&lt;/em&gt; attribute containing the failure reason will be added.&lt;/p&gt;&#10;&lt;h3&gt;Notes&lt;/h3&gt;&#10;&lt;ul&gt;&#10;&lt;li&gt;This transformer has been tested on Python 2.7 and 3.4.  &lt;/li&gt;&#10;&lt;li&gt;Released under &lt;a href=&quot;https://github.com/SanderSchaminee/fme-listappender/blob/master/LICENSE&quot;&gt;GNU General Public License v3.0&lt;/a&gt;.  &lt;/li&gt;&#10;&lt;li&gt;If you notice a bug or desire a new feature, please contact me. Or make a &lt;a href=&quot;https://github.com/SanderSchaminee/fme-listappender&quot;&gt;pull request&lt;/a&gt;!&lt;/li&gt;&#10;&lt;/ul&gt;"
#!   FME_PROCESS_COUNT="NO_PARALLELISM"
#!   MARKDOWN_DESCRIPTION="The _ListAppender_ adds new elements to an existing list, starting at a desired key or at the first available one. The user can set the values for the elements, based on constants, parameters or other feature attributes.&#10;&#10;###IMPORTANT&#10;A user can specify a regular attribute for the _List Attribute_ input parameter of this transformer, which will result in _all features being rejected_. The reason why this is possible in the first place, is because the _ListAppender_ also supports nested lists, but FME has no parameter type that only allows selection of the &quot;deepest nested list&quot;. Therefore, the only way this can be achieved, is by using a regular attribute input parameter, that will show the list key selection dialog once a list attribute has been selected. Below are a couple of examples that explain how the _List Attribute_ parameter can be used.&#10;&#10;**Example 1**  &#10;If the user wants to append elements at the end of nested list _parent{3}.child{}_ (i.e. append children to parent nr. 3), the _List Attribute_ input parameter should be set to _parent{**3**}.child{**0**}_. As a general rule, setting the last key to 0 means &quot;just append the values at the end of whatever is there already&quot;. This means that even if _parent{3}.child{}_ contains 6 elements (keys 0 - 5) already, the _ListAppender_ will start appending values at key 6. No elements will _ever_ be overwritten.&#10;&#10;**Example 2**  &#10;If the user wants to append elements starting at _exactly_ key 8 of list _example{}_ (i.e. add elements _example{8}_, _example{9}_, etc.), the _List Attribute_ input parameter should be set to _example{**8**}_. Note that if this list contains more than 8 elements already (e.g. 10 elements, so keys 0 - 9), the new ones will be appended starting at key 10 and further. No elements will _ever_ be overwritten.&#10;&#10;**Example 3**  &#10;If the user wants to append elements at the end of list _example{}.value_, the _List Attribute_ parameter could be set to _example{**0**}.value_. If the user has specified 3 new items to add and the list already contained 2 elements, the result will be:  &#10;_example{0}.value = &apos;existing item1&apos;_  &#10;_example{1}.value = &apos;existing item2&apos;_  &#10;_example{2}.value = &apos;new item1&apos;_  &#10;_example{3}.value = &apos;new item2&apos;_  &#10;_example{4}.value = &apos;new item3&apos;_  &#10;&#10;Note that if the _ListAppender_ failed to append attributes to the list, the feature will be rejected and a \__listappender\_error_ attribute containing the failure reason will be added.&#10;&#10;###Notes  &#10;- This transformer has been tested on Python 2.7 and 3.4.  &#10;- Released under [GNU General Public License v3.0](https://github.com/SanderSchaminee/fme-listappender/blob/master/LICENSE).  &#10;- If you notice a bug or desire a new feature, please contact me. Or make a [pull request](https://github.com/SanderSchaminee/fme-listappender)!"
#!   XFORM_DEPRECATED="No"
#!   DOC_TOP_LEFT="-523.999 -222.003"
#!   ITERATION_COUNT_ATTR=""
#!   FME_DOCUMENT_PRIORGUID="8351123a-889f-11e7-b861-c42c033923d4,409a3f16-88a9-11e7-acd4-c42c033923d4,37cad6ea-88ac-11e7-87f7-c42c033923d4,8ba35bb8-88af-11e7-a750-c42c033923d4,0a10ef9a-88b2-11e7-960b-c42c033923d4,f31b735c-88c3-11e7-b88b-c42c033923d4,5e4b63c4-88c6-11e7-8682-c42c033923d4,97113ea4-8e34-11e7-ae63-c42c033923d4,4780dd4c-8e37-11e7-a281-c42c033923d4,0e79a2d0-8e38-11e7-a281-c42c033923d4,d605dd00-8e38-11e7-a281-c42c033923d4,20d401f2-8e3b-11e7-9096-c42c033923d4,0e514688-8e3c-11e7-91d8-c42c033923d4,c21be076-8e3f-11e7-91d8-c42c033923d4,f91f5512-8e49-11e7-91d8-c42c033923d4,baa6c54e-8e4a-11e7-850e-c42c033923d4,ad92cd34-8e50-11e7-874d-c42c033923d4,50657444-8e51-11e7-a16a-c42c033923d4,b6ad4b1e-8e51-11e7-b071-c42c033923d4,122e104a-8e52-11e7-b6ed-c42c033923d4,8d3b0b8a-8e52-11e7-be93-c42c033923d4,52d5e0d4-8e55-11e7-b723-c42c033923d4,026933dc-8e8a-11e7-889e-c42c033923d4,589933e0-8e8c-11e7-89af-c42c033923d4,0edef91c-8eee-11e7-89af-c42c033923d4,c4afacc8-8f02-11e7-b573-c42c033923d4,b179bc42-8f03-11e7-a045-c42c033923d4,0cb30c98-8f05-11e7-805c-c42c033923d4,bafed338-8f08-11e7-a0b2-c42c033923d4,ab14b18a-8f27-11e7-9bd2-c42c033923d4,e22bf2d6-8f28-11e7-a36e-c42c033923d4,f98870ae-8f2c-11e7-9693-c42c033923d4,399e60c4-8f30-11e7-acf2-c42c033923d4,8897bf1a-8f47-11e7-bd2e-c42c033923d4,c7774cf4-8f52-11e7-8f4a-c42c033923d4,cdd3fcde-923e-11e7-a1ae-c42c033923d4,bd115dbc-9241-11e7-81e7-c42c033923d4,8ede6c36-9242-11e7-830f-c42c033923d4,a6a406c6-9244-11e7-a849-c42c033923d4,203f3f5a-9245-11e7-bcbe-c42c033923d4"
#!   USE_MARKDOWN="YES"
#!   HISTORY="September&lt;space&gt;1&lt;comma&gt;&lt;space&gt;2017,Sander&lt;space&gt;Schamin&lt;u00e9&gt;e,Initial&lt;space&gt;creation,September&lt;space&gt;5&lt;comma&gt;&lt;space&gt;2017,Sander&lt;space&gt;Schamin&lt;u00e9&gt;e,Added&lt;space&gt;support&lt;space&gt;for&lt;space&gt;named&lt;space&gt;list&lt;space&gt;components"
#!   FME_PROCESS_GROUP_BY=""
#!   ZOOM_SCALE="100"
#!   VIEW_POSITION="-567.006 273.003"
#!   MARKDOWN_USAGE="**List Attribute**  &#10;Select the list to which you would like to add new elements. Note that you can select regular attributes as well, but this will not work. Please refer to the examples in the Overview section.&#10;&#10;**Values to Add**  &#10;Sets the element values you would like to append to the list. The number of values you specify here equals the number of elements that will be added. You can choose to insert values from other (list) attributes, parameters or constants, including _null_."
#!   EXPLICIT_BOOKMARK_ORDER="false"
#!   FMX_INSERT_MODE="Linked Always"
#!   ATTR_TYPE_ENCODING="SDF"
#!   DOC_EXTENTS="2561.53 396.004"
#!   SHOW_ANNOTATIONS="true"
#!   WARN_INVALID_XFORM_PARAM="Yes"
#!   BLOCKED_LOOPING="No"
#!   FME_BUILD_NUM="17291"
#!   FME_DOCUMENT_GUID="e286a580-9245-11e7-a637-c42c033923d4"
#!   FME_PROCESS_GROUPS_ORDERED="No"
#!   FME_SERVER_SERVICES=""
#!   WORKSPACE_VERSION="1"
#!   USAGE="&lt;p&gt;&lt;strong&gt;List Attribute&lt;/strong&gt;&lt;br /&gt;&#10;Select the list to which you would like to add new elements. Note that you can select regular attributes as well, but this will not work. Please refer to the examples in the Overview section.&lt;/p&gt;&#10;&lt;p&gt;&lt;strong&gt;Values to Add&lt;/strong&gt;&lt;br /&gt;&#10;Sets the element values you would like to append to the list. The number of values you specify here equals the number of elements that will be added. You can choose to insert values from other (list) attributes, parameters or constants, including &lt;em&gt;null&lt;/em&gt;.&lt;/p&gt;"
#!   TITLE="ListAppender"
#!   LAST_SAVE_BUILD="FME(R) 2017.0.1.1 (20170512 - Build 17291 - macosx)"
#! >
#! <DATASETS>
#! </DATASETS>
#! <DATA_TYPES>
#! </DATA_TYPES>
#! <GEOM_TYPES>
#! </GEOM_TYPES>
#! <FEATURE_TYPES>
#! </FEATURE_TYPES>
#! <FMESERVER>
#! </FMESERVER>
#! <GLOBAL_PARAMETERS>
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI ATTR_ENCODED APPEND_LIST List Attribute:"
#!   DEFAULT_VALUE=""
#!   IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI GUI_LINE_TABLE_OR_ATTR APPEND_VALUES &quot;Attributes&quot;%&quot;NULLABLE OPTIONAL TEXT_EDIT_OR_NUM_OR_ATTR_ENCODED NEW_ATTR&quot; Values to Add:"
#!   DEFAULT_VALUE=""
#!   IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI IGNORE OPTIONAL TEXT_EDIT_PYTHON_PARM APPEND_VALUES_WWJD Python Script:"
#!   DEFAULT_VALUE="return&lt;space&gt;FME_MacroValues&lt;openbracket&gt;&lt;apos&gt;APPEND_VALUES&lt;apos&gt;&lt;closebracket&gt;"
#!   IS_STAND_ALONE="true"
#! />
#! </GLOBAL_PARAMETERS>
#! <COMMENTS>
#! <COMMENT
#!   IDENTIFIER="18"
#!   COMMENT_VALUE="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;helvetica neue&apos;; font-size:13pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Test for errors&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#!   POSITION="1056.92 174.001"
#!   TOP_LEFT="1056.92 174.001"
#!   BOTTOM_RIGHT="1055.92 175.001"
#!   BOUNDING_RECT="1056.92 174.001 -1 -1"
#!   ORDER="5e+14"
#!   FOLLOW_ANCHOR="true"
#!   INFO_NODE="false"
#!   COLOUR="1,1,0.784314,0.192157"
#!   SIZE_POLICY="8"
#!   COMMENT_TYPE="REGULAR"
#!   ANCHORED_NODE="14"
#! />
#! <COMMENT
#!   IDENTIFIER="22"
#!   COMMENT_VALUE="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;helvetica neue&apos;; font-size:13pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Append list attributes&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#!   POSITION="484.626 174.001"
#!   TOP_LEFT="484.626 174.001"
#!   BOTTOM_RIGHT="483.626 175.001"
#!   BOUNDING_RECT="484.626 174.001 -1 -1"
#!   ORDER="5e+14"
#!   FOLLOW_ANCHOR="true"
#!   INFO_NODE="false"
#!   COLOUR="1,1,0.784314,0.192157"
#!   SIZE_POLICY="8"
#!   COMMENT_TYPE="REGULAR"
#!   ANCHORED_NODE="2"
#! />
#! <COMMENT
#!   IDENTIFIER="23"
#!   COMMENT_VALUE="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;helvetica neue&apos;; font-size:13pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Cleanup&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#!   POSITION="1614.58 174.001"
#!   TOP_LEFT="1614.58 174.001"
#!   BOTTOM_RIGHT="1613.58 175.001"
#!   BOUNDING_RECT="1614.58 174.001 -1 -1"
#!   ORDER="5e+14"
#!   FOLLOW_ANCHOR="true"
#!   INFO_NODE="false"
#!   COLOUR="1,1,0.784314,0.192157"
#!   SIZE_POLICY="8"
#!   COMMENT_TYPE="REGULAR"
#!   ANCHORED_NODE="10"
#! />
#! <COMMENT
#!   IDENTIFIER="24"
#!   COMMENT_VALUE="&lt;b&gt;ParameterFetcher&amp;nbsp;[ParameterFetcher&amp;nbsp;Version&amp;nbsp;4]&lt;/b&gt;&lt;br&gt;$(APPEND_LIST)&amp;nbsp;-&amp;gt;&amp;nbsp;__append_list&lt;br&gt;$(APPEND_VALUES_WWJD)&amp;nbsp;-&amp;gt;&amp;nbsp;__append_values_wwjd"
#!   POSITION="-327.503 -222.003"
#!   TOP_LEFT="-327.503 -222.003"
#!   BOTTOM_RIGHT="-328.503 -221.003"
#!   BOUNDING_RECT="-327.503 -222.003 -1 -1"
#!   ORDER="5e+14"
#!   FOLLOW_ANCHOR="true"
#!   INFO_NODE="true"
#!   COMMENT_TYPE="REGULAR"
#!   ANCHORED_NODE="5"
#! />
#! </COMMENTS>
#! <CONSTANTS>
#! </CONSTANTS>
#! <BOOKMARKS>
#! </BOOKMARKS>
#! <TRANSFORMERS>
#! <TRANSFORMER
#!   IDENTIFIER="2"
#!   TYPE="PythonCaller"
#!   VERSION="4"
#!   POSITION="501.005 9.16016e-06"
#!   BOUNDING_RECT="501.005 9.16016e-06 -1 -1"
#!   ORDER="5e+14"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17291"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="__append_list" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__append_values_wwjd" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_listappender_error" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="PYTHONSYMBOL" PARM_VALUE="ListAppender"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="NEW_ATTRIBUTES" PARM_VALUE="_listappender_error"/>
#!     <XFORM_PARM PARM_NAME="ADVANCED_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PYTHONSOURCE" PARM_VALUE="#&lt;space&gt;-*-&lt;space&gt;coding:&lt;space&gt;utf-8&lt;space&gt;-*-&lt;lf&gt;import&lt;space&gt;fme&lt;lf&gt;import&lt;space&gt;fmeobjects&lt;lf&gt;import&lt;space&gt;six&lt;lf&gt;import&lt;space&gt;re&lt;lf&gt;&lt;lf&gt;#&lt;space&gt;GLOBAL&lt;space&gt;CONSTANTS&lt;lf&gt;#&lt;space&gt;ATTR_*&lt;space&gt;should&lt;space&gt;match&lt;space&gt;attribute&lt;space&gt;names&lt;space&gt;set&lt;space&gt;by&lt;space&gt;FME&lt;apos&gt;s&lt;space&gt;ParameterFetcher!&lt;lf&gt;ATTR_APPEND_LIST&lt;space&gt;=&lt;space&gt;&lt;apos&gt;__append_list&lt;apos&gt;&lt;lf&gt;ATTR_APPEND_VALUES&lt;space&gt;=&lt;space&gt;&lt;apos&gt;__append_values_wwjd&lt;apos&gt;&lt;lf&gt;ATTR_ERROR&lt;space&gt;=&lt;space&gt;&lt;apos&gt;_listappender_error&lt;apos&gt;&lt;lf&gt;VALUE_NULL&lt;space&gt;=&lt;space&gt;&lt;apos&gt;FME_NULL_VALUE&lt;apos&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;returned&lt;space&gt;when&lt;space&gt;user&lt;space&gt;sets&lt;space&gt;value&lt;space&gt;to&lt;space&gt;&lt;lt&gt;null&lt;gt&gt;&lt;lf&gt;&lt;lf&gt;class&lt;space&gt;ListAppender&lt;openparen&gt;object&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;PythonCaller&lt;space&gt;class&lt;space&gt;to&lt;space&gt;add&lt;space&gt;new&lt;space&gt;list&lt;space&gt;attributes&lt;space&gt;to&lt;space&gt;an&lt;space&gt;existing&lt;space&gt;list.&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;__init__&lt;openparen&gt;self&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;set&lt;space&gt;class&lt;space&gt;variables&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.log&lt;space&gt;=&lt;space&gt;fmeobjects.FMELogFile&lt;openparen&gt;&lt;closeparen&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;needed&lt;space&gt;for&lt;space&gt;logging&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.session&lt;space&gt;=&lt;space&gt;fmeobjects.FMESession&lt;openparen&gt;&lt;closeparen&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;needed&lt;space&gt;for&lt;space&gt;WWJD&lt;space&gt;parsing&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.regex&lt;space&gt;=&lt;space&gt;re.compile&lt;openparen&gt;&lt;apos&gt;^&lt;openparen&gt;&lt;openparen&gt;?:.*?&lt;closeparen&gt;*&lt;opencurly&gt;&lt;closeparen&gt;&lt;openparen&gt;&lt;backslash&gt;d+&lt;closeparen&gt;&lt;openparen&gt;&lt;closecurly&gt;&lt;openparen&gt;?:&lt;backslash&gt;.&lt;openbracket&gt;^.&lt;opencurly&gt;&lt;closecurly&gt;&lt;closebracket&gt;+&lt;closeparen&gt;*&lt;closeparen&gt;&lt;dollar&gt;&lt;apos&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.name&lt;space&gt;=&lt;space&gt;self.__class__.__name__&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;input&lt;openparen&gt;self&lt;comma&gt;&lt;space&gt;feature&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;Used&lt;space&gt;by&lt;space&gt;PythonCaller&lt;space&gt;on&lt;space&gt;each&lt;space&gt;feature.&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;append_list&lt;space&gt;=&lt;space&gt;feature.getAttribute&lt;openparen&gt;ATTR_APPEND_LIST&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;append_values&lt;space&gt;=&lt;space&gt;feature.getAttribute&lt;openparen&gt;ATTR_APPEND_VALUES&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;check&lt;space&gt;and&lt;space&gt;get&lt;space&gt;list&lt;space&gt;parts&lt;space&gt;according&lt;space&gt;to&lt;space&gt;pattern&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;try:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;prefix&lt;comma&gt;&lt;space&gt;user_index&lt;comma&gt;&lt;space&gt;suffix&lt;space&gt;=&lt;space&gt;self.regex.findall&lt;openparen&gt;append_list&lt;closeparen&gt;&lt;openbracket&gt;0&lt;closebracket&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;except&lt;space&gt;&lt;openparen&gt;ValueError&lt;comma&gt;&lt;space&gt;IndexError&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;error&lt;space&gt;=&lt;space&gt;&lt;apos&gt;&lt;quote&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;quote&gt;&lt;space&gt;is&lt;space&gt;not&lt;space&gt;a&lt;space&gt;&lt;openparen&gt;suitable&lt;closeparen&gt;&lt;space&gt;list&lt;space&gt;attribute.&lt;space&gt;Please&lt;space&gt;see&lt;space&gt;transformer&lt;space&gt;documentation.&lt;apos&gt;.format&lt;openparen&gt;append_list&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.discard&lt;openparen&gt;feature&lt;comma&gt;&lt;space&gt;error&lt;comma&gt;&lt;space&gt;True&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;get&lt;space&gt;start&lt;space&gt;index&lt;space&gt;of&lt;space&gt;list&lt;space&gt;&lt;openparen&gt;=last&lt;space&gt;item&lt;space&gt;+&lt;space&gt;1&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;max_index&lt;space&gt;=&lt;space&gt;self.get_max_index&lt;openparen&gt;feature&lt;comma&gt;&lt;space&gt;prefix&lt;comma&gt;&lt;space&gt;suffix&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;start_index&lt;space&gt;=&lt;space&gt;max&lt;openparen&gt;int&lt;openparen&gt;user_index&lt;closeparen&gt;&lt;comma&gt;&lt;space&gt;max_index&lt;space&gt;+&lt;space&gt;1&lt;closeparen&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;append&lt;space&gt;values&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;append_values:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;try:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;append_values&lt;space&gt;=&lt;space&gt;list&lt;openparen&gt;map&lt;openparen&gt;self.session.decodeFromFMEParsableText&lt;comma&gt;&lt;space&gt;append_values.split&lt;openparen&gt;&lt;apos&gt;&lt;space&gt;&lt;apos&gt;&lt;closeparen&gt;&lt;closeparen&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;except&lt;space&gt;&lt;openparen&gt;TypeError&lt;comma&gt;&lt;space&gt;ValueError&lt;comma&gt;&lt;space&gt;NameError&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.discard&lt;openparen&gt;feature&lt;comma&gt;&lt;space&gt;&lt;apos&gt;Failed&lt;space&gt;to&lt;space&gt;decode&lt;space&gt;attribute&lt;space&gt;values&lt;space&gt;parameter.&lt;apos&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;try:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;num_values&lt;space&gt;=&lt;space&gt;len&lt;openparen&gt;append_values&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;for&lt;space&gt;i&lt;space&gt;in&lt;space&gt;range&lt;openparen&gt;num_values&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;value&lt;space&gt;=&lt;space&gt;append_values&lt;openbracket&gt;i&lt;closebracket&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;refine&lt;space&gt;text&lt;space&gt;type&lt;comma&gt;&lt;space&gt;if&lt;space&gt;possible&lt;solidus&gt;needed&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;decode&lt;comma&gt;&lt;space&gt;value&lt;space&gt;=&lt;space&gt;self.resolve&lt;openparen&gt;feature&lt;comma&gt;&lt;space&gt;value&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;attr_name&lt;space&gt;=&lt;space&gt;&lt;apos&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;apos&gt;.format&lt;openparen&gt;prefix&lt;comma&gt;&lt;space&gt;start_index&lt;space&gt;+&lt;space&gt;i&lt;comma&gt;&lt;space&gt;suffix&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;value&lt;space&gt;!=&lt;space&gt;VALUE_NULL:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;write&lt;space&gt;attribute&lt;space&gt;in&lt;space&gt;corresponding&lt;space&gt;type&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;decode:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;value&lt;space&gt;=&lt;space&gt;value.decode&lt;openparen&gt;&lt;apos&gt;utf8&lt;apos&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;feature.setAttribute&lt;openparen&gt;attr_name&lt;comma&gt;&lt;space&gt;value&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;else:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;write&lt;space&gt;NULL&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;feature.setAttributeNullWithType&lt;openparen&gt;attr_name&lt;comma&gt;&lt;space&gt;fmeobjects.FME_ATTR_STRING&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;except&lt;space&gt;Exception&lt;space&gt;as&lt;space&gt;err:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.discard&lt;openparen&gt;feature&lt;comma&gt;&lt;space&gt;&lt;apos&gt;Failed&lt;space&gt;to&lt;space&gt;append&lt;space&gt;value:&lt;space&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;apos&gt;.format&lt;openparen&gt;err&lt;closeparen&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;else:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.pyoutput&lt;openparen&gt;feature&lt;closeparen&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;get_max_index&lt;openparen&gt;self&lt;comma&gt;&lt;space&gt;feature&lt;comma&gt;&lt;space&gt;prefix&lt;comma&gt;&lt;space&gt;suffix&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;Retrieves&lt;space&gt;the&lt;space&gt;highest&lt;space&gt;index&lt;space&gt;in&lt;space&gt;a&lt;space&gt;list&lt;space&gt;attribute&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;of&lt;space&gt;which&lt;space&gt;the&lt;space&gt;name&lt;space&gt;starts&lt;space&gt;with&lt;space&gt;&lt;openbracket&gt;prefix&lt;closebracket&gt;&lt;space&gt;and&lt;space&gt;ends&lt;space&gt;with&lt;space&gt;&lt;openbracket&gt;suffix&lt;closebracket&gt;.&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;max_index&lt;space&gt;=&lt;space&gt;-1&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;attributes&lt;space&gt;=&lt;space&gt;feature.getAllAttributeNames&lt;openparen&gt;&lt;closeparen&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;get&lt;space&gt;all&lt;space&gt;attribute&lt;space&gt;names&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;for&lt;space&gt;attr&lt;space&gt;in&lt;space&gt;attributes:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;filter&lt;space&gt;out&lt;space&gt;the&lt;space&gt;list&lt;space&gt;attributes&lt;space&gt;we&lt;space&gt;need&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;attr.startswith&lt;openparen&gt;prefix&lt;closeparen&gt;&lt;space&gt;and&lt;space&gt;attr.endswith&lt;openparen&gt;suffix&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;try:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;_&lt;comma&gt;&lt;space&gt;index&lt;comma&gt;&lt;space&gt;_&lt;space&gt;=&lt;space&gt;self.regex.findall&lt;openparen&gt;attr&lt;closeparen&gt;&lt;openbracket&gt;0&lt;closebracket&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;except&lt;space&gt;&lt;openparen&gt;ValueError&lt;comma&gt;&lt;space&gt;IndexError&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;continue&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;max_index&lt;space&gt;=&lt;space&gt;max&lt;openparen&gt;int&lt;openparen&gt;index&lt;closeparen&gt;&lt;comma&gt;&lt;space&gt;max_index&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;max_index&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;at&gt;staticmethod&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;resolve&lt;openparen&gt;feature&lt;comma&gt;&lt;space&gt;value&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;Determines&lt;space&gt;the&lt;space&gt;best&lt;space&gt;&lt;apos&gt;end&lt;space&gt;type&lt;apos&gt;&lt;space&gt;for&lt;space&gt;the&lt;space&gt;output&lt;space&gt;attribute.&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;decode&lt;space&gt;=&lt;space&gt;False&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;values&lt;space&gt;starting&lt;space&gt;with&lt;space&gt;a&lt;space&gt;&lt;at&gt;&lt;space&gt;should&lt;space&gt;be&lt;space&gt;evaluated&lt;space&gt;first&lt;space&gt;as&lt;space&gt;FME&lt;space&gt;Feature&lt;space&gt;Functions&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;value.startswith&lt;openparen&gt;&lt;apos&gt;&lt;at&gt;&lt;apos&gt;&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;try:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;TODO:&lt;space&gt;the&lt;space&gt;following&lt;space&gt;line&lt;space&gt;throws&lt;space&gt;a&lt;space&gt;weird&lt;space&gt;UnicodeDecodeError&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;in&lt;space&gt;FME&lt;space&gt;Hub&lt;space&gt;test&lt;space&gt;suite&lt;space&gt;w&lt;solidus&gt;&lt;space&gt;Python&lt;space&gt;3&lt;space&gt;only&lt;space&gt;when&lt;space&gt;value&lt;space&gt;is&lt;space&gt;a&lt;space&gt;non-ascii&lt;space&gt;str!&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;value&lt;space&gt;=&lt;space&gt;feature.performFunction&lt;openparen&gt;value&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;except&lt;space&gt;fmeobjects.FMEException:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;pass&lt;space&gt;&lt;space&gt;#&lt;space&gt;leave&lt;space&gt;as&lt;space&gt;is&lt;space&gt;if&lt;space&gt;it&lt;space&gt;didn&lt;apos&gt;t&lt;space&gt;work&lt;space&gt;out&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;convert&lt;space&gt;to&lt;space&gt;str&lt;space&gt;&lt;openparen&gt;if&lt;space&gt;Python&lt;space&gt;2.7&lt;space&gt;unicode&lt;closeparen&gt;&lt;comma&gt;&lt;space&gt;int&lt;space&gt;or&lt;space&gt;float&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;try:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;six.PY2:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;for&lt;space&gt;Python&lt;space&gt;2.7:&lt;space&gt;convert&lt;space&gt;to&lt;space&gt;utf8-encoded&lt;space&gt;or&lt;space&gt;regular&lt;space&gt;str&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;try:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;try&lt;space&gt;and&lt;space&gt;see&lt;space&gt;if&lt;space&gt;the&lt;space&gt;str&lt;solidus&gt;unicode&lt;space&gt;can&lt;space&gt;be&lt;space&gt;represented&lt;space&gt;as&lt;space&gt;ascii&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;value&lt;space&gt;=&lt;space&gt;value.encode&lt;openparen&gt;&lt;apos&gt;ascii&lt;apos&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;except&lt;space&gt;UnicodeDecodeError:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;already&lt;space&gt;a&lt;space&gt;str&lt;comma&gt;&lt;space&gt;but&lt;space&gt;not&lt;space&gt;ascii&lt;space&gt;-&lt;gt&gt;&lt;space&gt;tag&lt;space&gt;for&lt;space&gt;decoding&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;decode&lt;space&gt;=&lt;space&gt;True&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;except&lt;space&gt;UnicodeEncodeError:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;value&lt;space&gt;is&lt;space&gt;a&lt;space&gt;non-ascii&lt;space&gt;unicode&lt;space&gt;object&lt;space&gt;-&lt;gt&gt;&lt;space&gt;convert&lt;space&gt;to&lt;space&gt;utf8&lt;space&gt;str&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;value&lt;space&gt;=&lt;space&gt;value.encode&lt;openparen&gt;&lt;apos&gt;utf8&lt;apos&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;decode&lt;space&gt;=&lt;space&gt;True&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;use&lt;space&gt;&lt;quote&gt;brute&lt;space&gt;force&lt;quote&gt;&lt;space&gt;to&lt;space&gt;try&lt;space&gt;and&lt;space&gt;convert&lt;space&gt;to&lt;space&gt;int&lt;space&gt;or&lt;space&gt;float&lt;space&gt;respectively&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;try:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;value&lt;space&gt;=&lt;space&gt;int&lt;openparen&gt;value&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;except&lt;space&gt;ValueError:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;value&lt;space&gt;=&lt;space&gt;float&lt;openparen&gt;value&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;finally:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;decode&lt;comma&gt;&lt;space&gt;value&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;discard&lt;openparen&gt;self&lt;comma&gt;&lt;space&gt;feature&lt;comma&gt;&lt;space&gt;reason&lt;comma&gt;&lt;space&gt;warn=False&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;warn:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;message&lt;space&gt;=&lt;space&gt;&lt;apos&gt;&lt;opencurly&gt;&lt;closecurly&gt;:&lt;space&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;apos&gt;.format&lt;openparen&gt;self.name&lt;comma&gt;&lt;space&gt;reason&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.log.logMessageString&lt;openparen&gt;message&lt;comma&gt;&lt;space&gt;fmeobjects.FME_WARN&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;feature.setAttribute&lt;openparen&gt;ATTR_ERROR&lt;comma&gt;&lt;space&gt;reason&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.pyoutput&lt;openparen&gt;feature&lt;closeparen&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;close&lt;openparen&gt;self&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;del&lt;space&gt;self"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="PythonCaller"/>
#!     <XFORM_PARM PARM_NAME="HIDE_ATTRIBUTES" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="5"
#!   TYPE="ParameterFetcher"
#!   VERSION="4"
#!   POSITION="-6.50031 9.16016e-06"
#!   BOUNDING_RECT="-6.50031 9.16016e-06 -1 -1"
#!   ORDER="5e+14"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17291"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="__append_list" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__append_values_wwjd" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="XFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="ParameterFetcher"/>
#!     <XFORM_PARM PARM_NAME="ATTR_LIST" PARM_VALUE="__append_list $(APPEND_LIST) __append_values_wwjd $(APPEND_VALUES_WWJD)"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="10"
#!   TYPE="AttributeRemover"
#!   VERSION="1"
#!   POSITION="1524.02 9.16016e-06"
#!   BOUNDING_RECT="1524.02 9.16016e-06 -1 -1"
#!   ORDER="5e+14"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17291"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeRemover"/>
#!     <XFORM_PARM PARM_NAME="REMOVE_ATTRS" PARM_VALUE="__append_values_wwjd,__append_list,_listappender_error"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="14"
#!   TYPE="Tester"
#!   VERSION="2"
#!   POSITION="1007.51 9.16016e-06"
#!   BOUNDING_RECT="1007.51 9.16016e-06 -1 -1"
#!   ORDER="5e+14"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17291"
#! >
#!     <OUTPUT_FEAT NAME="PASSED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="__append_list" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__append_values_wwjd" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_listappender_error" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="FAILED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="__append_list" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="__append_values_wwjd" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_listappender_error" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="BOOL_OP" PARM_VALUE="OR"/>
#!     <XFORM_PARM PARM_NAME="TEST_DESCRIPTION" PARM_VALUE="&quot;&quot;"/>
#!     <XFORM_PARM PARM_NAME="TEST_MODE" PARM_VALUE="Automatic"/>
#!     <XFORM_PARM PARM_NAME="COMPOSITE_TEST" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="TEST_LIST" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Tester"/>
#!     <XFORM_PARM PARM_NAME="TEST_CLAUSE" PARM_VALUE="TEST &lt;at&gt;Value&lt;openparen&gt;_listappender_error&lt;closeparen&gt; NOT_ATTRIBUTE_HAS_VALUE &quot;&quot;"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="19"
#!   TYPE="AttributeRemover"
#!   VERSION="1"
#!   POSITION="1524.02 -183.502"
#!   BOUNDING_RECT="1524.02 -183.502 -1 -1"
#!   ORDER="5e+14"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17291"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_listappender_error" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeRemover_2"/>
#!     <XFORM_PARM PARM_NAME="REMOVE_ATTRS" PARM_VALUE="__append_values_wwjd,__append_list"/>
#! </TRANSFORMER>
#! </TRANSFORMERS>
#! <SUBDOCUMENT_IOS>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="3"
#!   NAME="Input"
#!   POSITION="-523.999 9.16016e-06"
#!   BOUNDING_RECT="-523.999 9.16016e-06 -1 -1"
#!   COLLAPSED="true"
#!   PUBLISHED="true"
#!   IS_SOURCE="true"
#!   ATTR_MODE="0"
#! >
#! </SUBDOCUMENT_IO>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="8"
#!   NAME="Output"
#!   POSITION="2037.53 9.16016e-06"
#!   BOUNDING_RECT="2037.53 9.16016e-06 -1 -1"
#!   COLLAPSED="true"
#!   IS_SOURCE="false"
#!   ATTR_MODE="0"
#! >
#! </SUBDOCUMENT_IO>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="13"
#!   NAME="&lt;Rejected&gt;"
#!   POSITION="2037.53 -183.502"
#!   BOUNDING_RECT="2037.53 -183.502 -1 -1"
#!   COLLAPSED="true"
#!   IS_SOURCE="false"
#!   ATTR_MODE="0"
#! >
#! </SUBDOCUMENT_IO>
#! </SUBDOCUMENT_IOS>
#! <FEAT_LINKS>
#! <FEAT_LINK
#!   IDENTIFIER="6"
#!   SOURCE_NODE="3"
#!   TARGET_NODE="5"
#!   SOURCE_PORT_DESC="0"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="15"
#!   SOURCE_NODE="2"
#!   TARGET_NODE="14"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="16"
#!   SOURCE_NODE="5"
#!   TARGET_NODE="2"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="12"
#!   SOURCE_NODE="10"
#!   TARGET_NODE="8"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="0"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="17"
#!   SOURCE_NODE="14"
#!   TARGET_NODE="10"
#!   SOURCE_PORT_DESC="fo 0 PASSED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="21"
#!   SOURCE_NODE="19"
#!   TARGET_NODE="13"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="0"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="20"
#!   SOURCE_NODE="14"
#!   TARGET_NODE="19"
#!   SOURCE_PORT_DESC="fo 1 FAILED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! </FEAT_LINKS>
#! <BREAKPOINTS>
#! </BREAKPOINTS>
#! <ATTR_LINKS>
#! </ATTR_LINKS>
#! <SUBDOCUMENTS>
#! </SUBDOCUMENTS>
#! <LOOKUP_TABLES>
#! </LOOKUP_TABLES>
#! </TRANSFORMER>
FME_PYTHON_VERSION 2or3
DEFAULT_MACRO $(ListAppender_WORKSPACE_NAME)_APPEND_LIST 
DEFAULT_MACRO $(ListAppender_WORKSPACE_NAME)_APPEND_VALUES 
INCLUDE PYTHON
def ParamFunc():
  return FME_MacroValues[FME_MacroValues['ListAppender_WORKSPACE_NAME'] + '_' + 'APPEND_VALUES']
value = ParamFunc()
macroName = FME_MacroValues['ListAppender_WORKSPACE_NAME'] + '_APPEND_VALUES_WWJD'
if value == None:
  return { macroName : '' }
else:
  return { macroName : str(value) }
END_INCLUDE
#! START_HEADER
#! END_HEADER

LOG_FILTER_MASK -1
DEFAULT_MACRO WB_CURRENT_CONTEXT
DEFAULT_MACRO ListAppender_WORKSPACE_NAME ""
INCLUDE [puts {MACRO WB_OLD_CONTEXT_$(ListAppender_WORKSPACE_NAME) $(WB_CURRENT_CONTEXT)};          puts {MACRO WB_CURRENT_CONTEXT $(ListAppender_WORKSPACE_NAME)}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(ListAppender_WORKSPACE_NAME)_Input1504621450 Input Splitter"   INPUT FEATURE_TYPE "$(ListAppender_WORKSPACE_NAME)_Input"   OUTPUT FEATURE_TYPE "$(ListAppender_WORKSPACE_NAME)_Input"
# -------------------------------------------------------------------------

Tcl2 proc $(ListAppender_WORKSPACE_NAME)_ParameterFetcher_doFetch {} {    foreach {name val} {"__append_list {$($(ListAppender_WORKSPACE_NAME)_APPEND_LIST)} __append_values_wwjd {$($(ListAppender_WORKSPACE_NAME)_APPEND_VALUES_WWJD$encode)}"} {         if { [string match {*<at>*} $val] == 1 } {             set val [FME_Execute EvaluateExpression {STRING} $val {$(ListAppender_WORKSPACE_NAME)_ParameterFetcher}];         } elseif {[string match {*FME_CONDITIONAL*} $val] == 1} {             set val [FME_Execute EvaluateExpression {STRING} $val {$(ListAppender_WORKSPACE_NAME)_ParameterFetcher}];         } else {             set val [FME_DecodeTextOrAttr $val];         };       FME_SetAttribute [FME_DecodeText $name] $val    } }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(ListAppender_WORKSPACE_NAME)_ParameterFetcher    INPUT  FEATURE_TYPE "$(ListAppender_WORKSPACE_NAME)_Input"    OUTPUT FEATURE_TYPE "$(ListAppender_WORKSPACE_NAME)_ParameterFetcher_OUTPUT"         @Tcl2($(ListAppender_WORKSPACE_NAME)_ParameterFetcher_doFetch)

# -------------------------------------------------------------------------


FME_PYTHON_PATH "$(FME_MF_DIR)"

FACTORY_DEF * PythonFactory    FACTORY_NAME $(ListAppender_WORKSPACE_NAME)_PythonCaller    INPUT  FEATURE_TYPE "$(ListAppender_WORKSPACE_NAME)_ParameterFetcher_OUTPUT"    SYMBOL_NAME ListAppender    PYTHON_NAMESPACE FMEOBJECTS    SOURCE_CODE #<space>-*-<space>coding:<space>utf-8<space>-*-<lf>import<space>fme<lf>import<space>fmeobjects<lf>import<space>six<lf>import<space>re<lf><lf>#<space>GLOBAL<space>CONSTANTS<lf>#<space>ATTR_*<space>should<space>match<space>attribute<space>names<space>set<space>by<space>FME<apos>s<space>ParameterFetcher!<lf>ATTR_APPEND_LIST<space>=<space><apos>__append_list<apos><lf>ATTR_APPEND_VALUES<space>=<space><apos>__append_values_wwjd<apos><lf>ATTR_ERROR<space>=<space><apos>_listappender_error<apos><lf>VALUE_NULL<space>=<space><apos>FME_NULL_VALUE<apos><space><space>#<space>returned<space>when<space>user<space>sets<space>value<space>to<space><lt>null<gt><lf><lf>class<space>ListAppender<openparen>object<closeparen>:<lf><space><space><space><space><quote><quote><quote>PythonCaller<space>class<space>to<space>add<space>new<space>list<space>attributes<space>to<space>an<space>existing<space>list.<quote><quote><quote><lf><space><space><space><space>def<space>__init__<openparen>self<closeparen>:<lf><space><space><space><space><space><space><space><space>#<space>set<space>class<space>variables<lf><space><space><space><space><space><space><space><space>self.log<space>=<space>fmeobjects.FMELogFile<openparen><closeparen><space><space><space><space><space><space>#<space>needed<space>for<space>logging<lf><space><space><space><space><space><space><space><space>self.session<space>=<space>fmeobjects.FMESession<openparen><closeparen><space><space>#<space>needed<space>for<space>WWJD<space>parsing<lf><space><space><space><space><space><space><space><space>self.regex<space>=<space>re.compile<openparen><apos>^<openparen><openparen>?:.*?<closeparen>*<opencurly><closeparen><openparen><backslash>d+<closeparen><openparen><closecurly><openparen>?:<backslash>.<openbracket>^.<opencurly><closecurly><closebracket>+<closeparen>*<closeparen><dollar><apos><closeparen><lf><space><space><space><space><space><space><space><space>self.name<space>=<space>self.__class__.__name__<lf><lf><space><space><space><space>def<space>input<openparen>self<comma><space>feature<closeparen>:<lf><space><space><space><space><space><space><space><space><quote><quote><quote>Used<space>by<space>PythonCaller<space>on<space>each<space>feature.<quote><quote><quote><lf><space><space><space><space><space><space><space><space>append_list<space>=<space>feature.getAttribute<openparen>ATTR_APPEND_LIST<closeparen><lf><space><space><space><space><space><space><space><space>append_values<space>=<space>feature.getAttribute<openparen>ATTR_APPEND_VALUES<closeparen><lf><space><space><space><space><space><space><space><space><lf><space><space><space><space><space><space><space><space>#<space>check<space>and<space>get<space>list<space>parts<space>according<space>to<space>pattern<lf><space><space><space><space><space><space><space><space>try:<lf><space><space><space><space><space><space><space><space><space><space><space><space>prefix<comma><space>user_index<comma><space>suffix<space>=<space>self.regex.findall<openparen>append_list<closeparen><openbracket>0<closebracket><lf><space><space><space><space><space><space><space><space>except<space><openparen>ValueError<comma><space>IndexError<closeparen>:<lf><space><space><space><space><space><space><space><space><space><space><space><space>error<space>=<space><apos><quote><opencurly><closecurly><quote><space>is<space>not<space>a<space><openparen>suitable<closeparen><space>list<space>attribute.<space>Please<space>see<space>transformer<space>documentation.<apos>.format<openparen>append_list<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>self.discard<openparen>feature<comma><space>error<comma><space>True<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>return<lf><lf><space><space><space><space><space><space><space><space>#<space>get<space>start<space>index<space>of<space>list<space><openparen>=last<space>item<space>+<space>1<closeparen><lf><space><space><space><space><space><space><space><space>max_index<space>=<space>self.get_max_index<openparen>feature<comma><space>prefix<comma><space>suffix<closeparen><lf><space><space><space><space><space><space><space><space>start_index<space>=<space>max<openparen>int<openparen>user_index<closeparen><comma><space>max_index<space>+<space>1<closeparen><lf><lf><space><space><space><space><space><space><space><space>#<space>append<space>values<lf><space><space><space><space><space><space><space><space>if<space>append_values:<lf><space><space><space><space><space><space><space><space><space><space><space><space>try:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>append_values<space>=<space>list<openparen>map<openparen>self.session.decodeFromFMEParsableText<comma><space>append_values.split<openparen><apos><space><apos><closeparen><closeparen><closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>except<space><openparen>TypeError<comma><space>ValueError<comma><space>NameError<closeparen>:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>self.discard<openparen>feature<comma><space><apos>Failed<space>to<space>decode<space>attribute<space>values<space>parameter.<apos><closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>return<lf><space><space><space><space><space><space><space><space><space><space><space><space>try:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>num_values<space>=<space>len<openparen>append_values<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>for<space>i<space>in<space>range<openparen>num_values<closeparen>:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>value<space>=<space>append_values<openbracket>i<closebracket><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>#<space>refine<space>text<space>type<comma><space>if<space>possible<solidus>needed<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>decode<comma><space>value<space>=<space>self.resolve<openparen>feature<comma><space>value<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>attr_name<space>=<space><apos><opencurly><closecurly><opencurly><closecurly><opencurly><closecurly><apos>.format<openparen>prefix<comma><space>start_index<space>+<space>i<comma><space>suffix<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>if<space>value<space>!=<space>VALUE_NULL:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>#<space>write<space>attribute<space>in<space>corresponding<space>type<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>if<space>decode:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>value<space>=<space>value.decode<openparen><apos>utf8<apos><closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>feature.setAttribute<openparen>attr_name<comma><space>value<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>else:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>#<space>write<space>NULL<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>feature.setAttributeNullWithType<openparen>attr_name<comma><space>fmeobjects.FME_ATTR_STRING<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>except<space>Exception<space>as<space>err:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>self.discard<openparen>feature<comma><space><apos>Failed<space>to<space>append<space>value:<space><opencurly><closecurly><apos>.format<openparen>err<closeparen><closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>return<lf><space><space><space><space><space><space><space><space><space><space><space><space>else:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>self.pyoutput<openparen>feature<closeparen><lf><lf><space><space><space><space>def<space>get_max_index<openparen>self<comma><space>feature<comma><space>prefix<comma><space>suffix<closeparen>:<lf><space><space><space><space><space><space><space><space><quote><quote><quote>Retrieves<space>the<space>highest<space>index<space>in<space>a<space>list<space>attribute<lf><space><space><space><space><space><space><space><space>of<space>which<space>the<space>name<space>starts<space>with<space><openbracket>prefix<closebracket><space>and<space>ends<space>with<space><openbracket>suffix<closebracket>.<lf><space><space><space><space><space><space><space><space><quote><quote><quote><lf><space><space><space><space><space><space><space><space>max_index<space>=<space>-1<lf><space><space><space><space><space><space><space><space>attributes<space>=<space>feature.getAllAttributeNames<openparen><closeparen><space><space><space><space><space>#<space>get<space>all<space>attribute<space>names<lf><space><space><space><space><space><space><space><space>for<space>attr<space>in<space>attributes:<lf><space><space><space><space><space><space><space><space><space><space><space><space>#<space>filter<space>out<space>the<space>list<space>attributes<space>we<space>need<lf><space><space><space><space><space><space><space><space><space><space><space><space>if<space>attr.startswith<openparen>prefix<closeparen><space>and<space>attr.endswith<openparen>suffix<closeparen>:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>try:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>_<comma><space>index<comma><space>_<space>=<space>self.regex.findall<openparen>attr<closeparen><openbracket>0<closebracket><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>except<space><openparen>ValueError<comma><space>IndexError<closeparen>:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>continue<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>max_index<space>=<space>max<openparen>int<openparen>index<closeparen><comma><space>max_index<closeparen><lf><space><space><space><space><space><space><space><space>return<space>max_index<lf><lf><space><space><space><space><at>staticmethod<lf><space><space><space><space>def<space>resolve<openparen>feature<comma><space>value<closeparen>:<lf><space><space><space><space><space><space><space><space><quote><quote><quote>Determines<space>the<space>best<space><apos>end<space>type<apos><space>for<space>the<space>output<space>attribute.<quote><quote><quote><lf><space><space><space><space><space><space><space><space>decode<space>=<space>False<lf><space><space><space><space><space><space><space><space>#<space>values<space>starting<space>with<space>a<space><at><space>should<space>be<space>evaluated<space>first<space>as<space>FME<space>Feature<space>Functions<lf><space><space><space><space><space><space><space><space>if<space>value.startswith<openparen><apos><at><apos><closeparen>:<lf><space><space><space><space><space><space><space><space><space><space><space><space>try:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>#<space>TODO:<space>the<space>following<space>line<space>throws<space>a<space>weird<space>UnicodeDecodeError<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>#<space>in<space>FME<space>Hub<space>test<space>suite<space>w<solidus><space>Python<space>3<space>only<space>when<space>value<space>is<space>a<space>non-ascii<space>str!<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>value<space>=<space>feature.performFunction<openparen>value<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>except<space>fmeobjects.FMEException:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>pass<space><space>#<space>leave<space>as<space>is<space>if<space>it<space>didn<apos>t<space>work<space>out<lf><space><space><space><space><space><space><space><space><lf><space><space><space><space><space><space><space><space>#<space>convert<space>to<space>str<space><openparen>if<space>Python<space>2.7<space>unicode<closeparen><comma><space>int<space>or<space>float<lf><space><space><space><space><space><space><space><space>try:<lf><space><space><space><space><space><space><space><space><space><space><space><space>if<space>six.PY2:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>#<space>for<space>Python<space>2.7:<space>convert<space>to<space>utf8-encoded<space>or<space>regular<space>str<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>try:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>#<space>try<space>and<space>see<space>if<space>the<space>str<solidus>unicode<space>can<space>be<space>represented<space>as<space>ascii<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>value<space>=<space>value.encode<openparen><apos>ascii<apos><closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>except<space>UnicodeDecodeError:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>#<space>already<space>a<space>str<comma><space>but<space>not<space>ascii<space>-<gt><space>tag<space>for<space>decoding<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>decode<space>=<space>True<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>except<space>UnicodeEncodeError:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>#<space>value<space>is<space>a<space>non-ascii<space>unicode<space>object<space>-<gt><space>convert<space>to<space>utf8<space>str<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>value<space>=<space>value.encode<openparen><apos>utf8<apos><closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>decode<space>=<space>True<lf><space><space><space><space><space><space><space><space><space><space><space><space>#<space>use<space><quote>brute<space>force<quote><space>to<space>try<space>and<space>convert<space>to<space>int<space>or<space>float<space>respectively<space><lf><space><space><space><space><space><space><space><space><space><space><space><space>try:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>value<space>=<space>int<openparen>value<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>except<space>ValueError:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>value<space>=<space>float<openparen>value<closeparen><lf><space><space><space><space><space><space><space><space>finally:<lf><space><space><space><space><space><space><space><space><space><space><space><space>return<space>decode<comma><space>value<lf><space><space><space><space><lf><space><space><space><space>def<space>discard<openparen>self<comma><space>feature<comma><space>reason<comma><space>warn=False<closeparen>:<lf><space><space><space><space><space><space><space><space>if<space>warn:<lf><space><space><space><space><space><space><space><space><space><space><space><space>message<space>=<space><apos><opencurly><closecurly>:<space><opencurly><closecurly><apos>.format<openparen>self.name<comma><space>reason<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>self.log.logMessageString<openparen>message<comma><space>fmeobjects.FME_WARN<closeparen><lf><space><space><space><space><space><space><space><space>feature.setAttribute<openparen>ATTR_ERROR<comma><space>reason<closeparen><lf><space><space><space><space><space><space><space><space>self.pyoutput<openparen>feature<closeparen><lf><lf><space><space><space><space>def<space>close<openparen>self<closeparen>:<lf><space><space><space><space><space><space><space><space>del<space>self    OUTPUT PYOUTPUT FEATURE_TYPE "$(ListAppender_WORKSPACE_NAME)_PythonCaller_OUTPUT"

# -------------------------------------------------------------------------

FACTORY_DEF * TestFactory    FACTORY_NAME $(ListAppender_WORKSPACE_NAME)_Tester    INPUT  FEATURE_TYPE "$(ListAppender_WORKSPACE_NAME)_PythonCaller_OUTPUT"    TEST @EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>_listappender_error<closeparen>,$(ListAppender_WORKSPACE_NAME)_Tester) NOT_ATTRIBUTE_HAS_VALUE "" ENCODED    BOOLEAN_OPERATOR OR    OUTPUT PASSED FEATURE_TYPE "$(ListAppender_WORKSPACE_NAME)_Tester_PASSED"    OUTPUT FAILED FEATURE_TYPE "$(ListAppender_WORKSPACE_NAME)_Tester_FAILED"
# -------------------------------------------------------------------------

INCLUDE [    set macroLine "MACRO $(ListAppender_WORKSPACE_NAME)_AttributeRemover_2_LIST_EXP ";    foreach attr [split ""] {       set attr [FME_DecodeText $attr];       set attr [regsub "{}$" $attr "{}.*"];       set attr [regsub -all "{}" $attr "\\{\[0-9\]+\\}"];       append macroLine ",^$attr$";    };    puts $macroLine; ]
FACTORY_DEF * TeeFactory    FACTORY_NAME $(ListAppender_WORKSPACE_NAME)_AttributeRemover_2    INPUT  FEATURE_TYPE "$(ListAppender_WORKSPACE_NAME)_Tester_FAILED"    OUTPUT FEATURE_TYPE "$(ListAppender_WORKSPACE_NAME)_AttributeRemover_2_OUTPUT"        @RemoveAttributes(fme_encoded,__append_values_wwjd,__append_list)        @RemoveAttributes(fme_pcre_match"$($(ListAppender_WORKSPACE_NAME)_AttributeRemover_2_LIST_EXP)")

# -------------------------------------------------------------------------

INCLUDE [    set macroLine "MACRO $(ListAppender_WORKSPACE_NAME)_AttributeRemover_LIST_EXP ";    foreach attr [split ""] {       set attr [FME_DecodeText $attr];       set attr [regsub "{}$" $attr "{}.*"];       set attr [regsub -all "{}" $attr "\\{\[0-9\]+\\}"];       append macroLine ",^$attr$";    };    puts $macroLine; ]
FACTORY_DEF * TeeFactory    FACTORY_NAME $(ListAppender_WORKSPACE_NAME)_AttributeRemover    INPUT  FEATURE_TYPE "$(ListAppender_WORKSPACE_NAME)_Tester_PASSED"    OUTPUT FEATURE_TYPE "$(ListAppender_WORKSPACE_NAME)_AttributeRemover_OUTPUT"        @RemoveAttributes(fme_encoded,__append_values_wwjd,__append_list,_listappender_error)        @RemoveAttributes(fme_pcre_match"$($(ListAppender_WORKSPACE_NAME)_AttributeRemover_LIST_EXP)")

FACTORY_DEF * TeeFactory   FACTORY_NAME "$(ListAppender_WORKSPACE_NAME)_Output1504621450 Output Collector"   INPUT FEATURE_TYPE "$(ListAppender_WORKSPACE_NAME)_AttributeRemover_OUTPUT"   OUTPUT FEATURE_TYPE "$(ListAppender_WORKSPACE_NAME)_Output"
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(ListAppender_WORKSPACE_NAME)_<Rejected>1504621450 Output Collector"   INPUT FEATURE_TYPE "$(ListAppender_WORKSPACE_NAME)_AttributeRemover_2_OUTPUT"   OUTPUT FEATURE_TYPE "$(ListAppender_WORKSPACE_NAME)_<Rejected>"
INCLUDE [puts {MACRO WB_CURRENT_CONTEXT $(WB_OLD_CONTEXT_$(ListAppender_WORKSPACE_NAME))}]
